Given an array, find the nearest smaller element G[i] for every element A[i] in the array such that the element has an index smaller than i.
More formally,

G[i] for an element A[i] = an element A[j] such that 
    j is maximum possible AND 
    j < i AND
    A[j] < A[i]

Elements for which no smaller element exist, consider next smaller element as -1.

From: InterviewBit

Solution: 

public class Solution {
    public ArrayList<Integer> prevSmaller(ArrayList<Integer> A) {
        
        Stack<Integer> stack = new Stack<>();
        ArrayList<Integer> newArray = new ArrayList<>();
        for(int i=0;i<A.size();i++){
            
            
            if(i==0){               //Corner Case 
                newArray.add(-1);
                continue;
            }

	    if(A.get(i)>A.get(i-1)){
                newArray.add(A.get(i-1));   //If the last element satisfy the codition add it 
                stack.push(A.get(i-1));     //and push it to stack
            }else{
                while(!stack.isEmpty()){            //If not, check in the satck wich is the elements that satisfy the condition
                    if(stack.peek()<A.get(i)){
                        newArray.add(stack.peek());
                        break;
                    }else{
                        stack.pop();
                    }
                }
                if(stack.isEmpty()){
                newArray.add(-1);
                stack.push(A.get(i));
                }
            }
            
            
        }
        
        return newArray;
        
    }
}
